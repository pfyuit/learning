<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Configuration for Scanning -->
	<context:component-scan base-package="com.pfyuit.myjavaee.dao.database.rdbms.jpa"></context:component-scan>
	<context:component-scan base-package="com.pfyuit.myjavaee.service.database.rdbms.jpa"></context:component-scan>

	<!-- Configuration for Myblog Data Source -->
	<bean id="dataSourceMyblog" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}" />

		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
		<property name="preferredTestQuery" value="${c3p0.preferredTestQuery}" />

		<property name="driverClass" value="${jdbc.db.myblog.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.db.myblog.url}" />
		<property name="user" value="${jdbc.db.myblog.username}" />
		<property name="password" value="${jdbc.db.myblog.password}" />
	</bean>

	<!-- Configuration for Entity Manager Factory Using Myblog Data Source -->
	<!-- The simplest way that has limited power (application-managed), not recommended -->
	<!-- <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean"> -->
	<!-- <property name="persistenceUnitName" value="xxx" /> -->
	<!-- </bean> -->

	<!-- The complex way that has more power (container-managed), recommended -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- <property name="persistenceUnitManager" ref="persistenceUnitManager"/> -->
		<property name="persistenceXmlLocation" value="classpath:/database/rdbms/jpa/persistence.xml" />
		<property name="dataSource" ref="dataSourceMyblog" />
		<property name="persistenceProvider" ref="persistenceProvider" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="packagesToScan" value="com.pfyuit.myjavaee.model.database.rdbms.jpa" />
	</bean>

	<!-- Define the JPA Persistence Provider -->
	<bean id="persistenceProvider" class="org.hibernate.jpa.HibernatePersistenceProvider" />

	<!-- Define the JPA Vendor Apdapter -->
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
	</bean>

	<!-- Define the persistenceUnitManager, not used yet -->
	<!-- <bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager" -->
	<!-- p:default-data-source-ref="dataSourceMyblog" p:persistence-xml-locations="classpath:/database/rdbms/jpa/persistence.xml"> -->
	<!-- <property name="loadTimeWeaver"> -->
	<!-- <bean class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver" /> -->
	<!-- </property> -->
	<!-- </bean> -->
	<!-- <context:load-time-weaver /> -->

	<!-- Configuration for Jpa Transaction Manager -->
	<bean id="transactionManagerMyblogJpa" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<qualifier value="myblogJpa" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerMyblogJpa" />

</beans>